---
  name: CI
  on:
    push:
      branches:
        - main
      tags:
        - "*"
    pull_request:
  
  concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true
  
  jobs:
    test:
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v4
          with:
            submodules: recursive
  
        - uses: actions/setup-python@v5
          with:
            python-version: "3.11.9"
  
        - name: Install Poetry Action
          uses: snok/install-poetry@v1.3.1
          with:
            virtualenvs-create: true
            virtualenvs-in-project: true
  
        - name: Load cached venv
          id: cached-poetry-dependencies
          uses: actions/cache@v4
          with:
            path: .venv
            key: venv-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/poetry.lock') }}
  
        - name: Load cached Whisper models
          id: cached-whisper-models
          uses: actions/cache@v4
          with:
            path: |
              ~/AppData/Local/Buzz/Buzz/Cache
            key: whisper-models
  
        - uses: AnimMouse/setup-ffmpeg@v1.2.0
          id: setup-ffmpeg
  
        - name: Test ffmpeg
          run: ffmpeg -i ./testdata/audio-long.mp3 ./testdata/audio-long.wav
  
        - name: Install dependencies
          run: poetry install
  
        - name: Test
          run: poetry run make test
          shell: bash
  
        - name: Upload coverage reports to Codecov with GitHub Action
          uses: codecov/codecov-action@v4
          with:
            flags: ${{ runner.os }}
            token: ${{ secrets.CODECOV_TOKEN }}
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  
    build:
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v4
          with:
            submodules: recursive
  
        - uses: actions/setup-python@v5
          with:
            python-version: "3.11.9"
  
        - name: Install Poetry Action
          uses: snok/install-poetry@v1.3.1
          with:
            virtualenvs-create: true
            virtualenvs-in-project: true
  
        - name: Load cached venv
          id: cached-poetry-dependencies
          uses: actions/cache@v4
          with:
            path: .venv
            key: venv-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/poetry.lock') }}
  
        - uses: AnimMouse/setup-ffmpeg@v1.2.0
          id: setup-ffmpeg
  
        - name: Install dependencies
          run: poetry install
  
        - name: Bundle
          run: |
            cp -r ./dll_backup ./buzz/
            poetry run make bundle_windows
          shell: bash
  
        - uses: actions/upload-artifact@v4
          with:
            name: Buzz-${{ runner.os }}-${{ runner.arch }}
            path: dist/Buzz*-windows.exe
            
    release:
      runs-on: windows-latest
      needs: [build, test]
      if: startsWith(github.ref, 'refs/tags/')
      steps:
        - uses: actions/checkout@v4
          with:
            submodules: recursive
  
        - uses: actions/download-artifact@v4
          with:
            name: Buzz-${{ runner.os }}-${{ runner.arch }}
  
        - name: Install Poetry Action
          uses: snok/install-poetry@v1.3.1
          with:
            virtualenvs-create: true
            virtualenvs-in-project: true
  
        - name: Release
          uses: softprops/action-gh-release@v2
          with:
            files: dist/Buzz*-windows.exe
  